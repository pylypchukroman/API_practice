{"version":3,"sources":["index.js"],"names":["refs","menuList","document","querySelector","markupMain","pagination","baseUrl","generatePagination","info","markup","activePage","prev","parseInt","split","console","log","i","pages","next","innerHTML","getDataServer","url","fetch","then","response","json","onClickEvent","e","target","nodeName","preventDefault","href","data","markupImage","results","map","character","image","name","gender","origin","species","status","join","Object","entries","key","value","addEventListener"],"mappings":";;;AA6DC,aA7DD,QAAA,oBAEA,MAAMA,EAAO,CACXC,SAAUC,SAASC,cAAc,eACjCC,WAAYF,SAASC,cAAc,iBACnCE,WAAYH,SAASC,cAAc,gBAE/BG,EAAU,kCAEhB,SAASC,EAAmBC,GACtBC,IAAAA,EAAS,GACTC,EAAa,EACC,OAAdF,EAAKG,OACPF,eAAsBD,EAAKG,mBAC3BD,EAAaE,SAASJ,EAAKG,KAAKE,MAAM,KAAK,IAAM,GAEnDC,QAAQC,IAAIL,GACP,IAAA,IAAIM,EAAI,EAAGA,GAAKR,EAAKS,MAAOD,IAC/BP,gBACEC,IAAeM,EAAI,SAAW,aACrBV,oBAA0BU,MAAMA,QAG3B,OAAdR,EAAKU,OACPT,eAAsBD,EAAKU,oBAE7BlB,EAAKK,WAAWc,UAAYV,EAG9B,SAASW,EAAcC,GACdC,OAAAA,MAAMD,GAAKE,KAAKC,GAAYA,EAASC,QAW9C,SAASC,EAAaC,GACM,MAAtBA,EAAEC,OAAOC,WACbF,EAAEG,iBACFV,EAAcO,EAAEC,OAAOG,MAAMR,KAAKS,IAChCzB,EAAmByB,EAAKxB,MAClByB,MAAAA,EAAcD,EAAKE,QACtBC,IACCC,sCAAgDA,EAAUC,sEAEpCD,EAAUE,4CACRF,EAAUG,8CACVH,EAAUI,OAAOF,6CAChBF,EAAUK,+CACXL,EAAUM,mCAInCC,KAAK,IACR3C,EAAKI,WAAWe,UAAYc,KA1BhCb,EAAcd,GAASiB,KAAKS,IACpBvB,MAAAA,EAASmC,OAAOC,QAAQb,GAC3BG,IAAI,EAAEW,EAAKC,qBAA2BA,MAAUD,cAChDH,KAAK,IACR3C,EAAKC,SAASkB,UAAYV,IAE5BP,SAAS8C,iBAAiB,QAAStB","file":"src.38fed5f9.js","sourceRoot":"../src","sourcesContent":["import './sass/main.scss';\n\nconst refs = {\n  menuList: document.querySelector('.menu__list'),\n  markupMain: document.querySelector('.markup__main'),\n  pagination: document.querySelector('.pagination'),\n};\nconst baseUrl = 'https://rickandmortyapi.com/api';\n\nfunction generatePagination(info) {\n  let markup = '';\n  let activePage = 1;\n  if (info.prev !== null) {\n    markup += `<a href=\"${info.prev}\">&lArr;</a>`;\n    activePage = parseInt(info.prev.split('=')[1]) + 1;\n  }\n  console.log(activePage);\n  for (let i = 1; i <= info.pages; i++) {\n    markup += `<a class=\"${\n      activePage === i ? 'active' : ''\n    }\" href=\"${baseUrl}/character?page=${i}\">${i}</a>`;\n  }\n\n  if (info.next !== null) {\n    markup += `<a href=\"${info.next}\">&rArr;</a>`;\n  }\n  refs.pagination.innerHTML = markup;\n}\n\nfunction getDataServer(url) {\n  return fetch(url).then(response => response.json());\n}\n\ngetDataServer(baseUrl).then(data => {\n  const markup = Object.entries(data)\n    .map(([key, value]) => `<li><a href=\"${value}\">${key}</a></li>`)\n    .join('');\n  refs.menuList.innerHTML = markup;\n});\ndocument.addEventListener('click', onClickEvent);\n\nfunction onClickEvent(e) {\n  if (e.target.nodeName !== 'A') return;\n  e.preventDefault();\n  getDataServer(e.target.href).then(data => {\n    generatePagination(data.info);\n    const markupImage = data.results\n      .map(\n        character => `<li class=\"main-item\"><img src=\"${character.image}\">\n      <ul class=\"item-list\">\n<li class=\"item-text\">Name: ${character.name}</li>\n<li class=\"item-text\">Gender: ${character.gender}</li>\n<li class=\"item-text\">Adress: ${character.origin.name}</li>\n<li class=\"item-text\">Species: ${character.species}</li>\n<li class=\"item-text\">Status: ${character.status}</li>\n</ul>\n      </li>`,\n      )\n      .join('');\n    refs.markupMain.innerHTML = markupImage;\n  });\n}\n"]}